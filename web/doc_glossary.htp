<set O_WHERE="Glossary">

<file include="x_common.inc">
<file include="x_header.inc">

<use DocMENU>

<div class="submenu">
<use SubSpacer>
<use DocUsage>
<use DocAbout>
<use DocCredits>
<use SubWhere where="GLOSSARY">
<use DocHistory>
</div>

<div class="rest">


<h3> GLOSSARY OF TERMS </h3>

<div id="brush" class="gloss_term">
Brush
</div><div class="gloss_define">
This is a term borrowed from Quake mapping.
A brush is a solid area in 3D space.
Levels are built by placing a lot of brushes everywhere.
For example, the floor you are standing on will be one brush,
and the ceiling overhead will another one.
Stuff like doors are built from many brushes.

<p>
In OBLIGE, brushes consists of a top face, a bottom face, and
a group of side faces.
The top and bottom are usually flat but may be sloped,
whereas the sides are always perfectly vertical.

<p>
<i>(See also... CSG)</i>

</div>


<div id="cell" class="gloss_term">
Cell
</div><div class="gloss_define">
In the old (V2) code this meant a single room.  Each cell
consisted of 3x3 "chunks" (which are now called Seeds)
where each chunk could be a floor, stair, pillar (etc) and the
room was surrounded by a 64-unit thick wall.

<p>
In the new code, rooms are no longer a fixed size, they
can be as small as 2x2 seeds or bigger than 9x9, and the walls
are no longer separate but "eat" into seeds
(and are thinner too).
</div>


<div id="cell" class="gloss_term">
CSG
</div><div class="gloss_define">
CSG stands for "Constructive Solid Geometry".
For OBLIGE it means the process of taking all the brushes
which define the map (most of them are solid), and construct the
output map format from them, e.g. the DOOM wad file
or the QUAKE bsp file.
</div>


<div id="engine" class="gloss_term">
Engine / Port
</div><div class="gloss_define">
When Carmack released the DOOM source code, many different people
hacked away on it and produced their own version of the EXE,
often with greatly expanded capabilities.  The same thing happened
when he released the QUAKE and QUAKE II source code.

<p>
Hence the term "Engine" or "Source Port" can refer to one of these
enhanced versions of the game, but it could also mean the original
EXE which the game came with when you bought it -- that one
is often called "Vanilla" since nothing extra has been added.

<p>
<i>(See also... Limit Removing)</i>

</div>


<div id="entity" class="gloss_term">
Entity
</div><div class="gloss_define">
This is another Quake term, and means an object or thing in the map.
Players, monsters, weapons, ammo, health, barrels, torches (etc etc)
are all entities.
</div>


<div id="limit_removing" class="gloss_term">
Limit Removing
</div><div class="gloss_define">
A "Limit Removing" engine is one which people have removed various
limitations that the original game has.
For example, plain DOOM.EXE will crash if there are more than 128
visplanes on the screen -- the dreaded VPO (Visplane Overflow) error.

<p>
However source ports like BOOM have removed this limitation,
there can be as many visplanes on the screen as necessary to draw
the level.

<p>
OBLIGE needs a Limit Removing engine because it is impossible
for it to figure out when a limit (like visplanes) is going
to be exceeded -- it depends greatly on the architecture of the map.
The only real way to keep inside the limitations would be to
produce very flat, boring, mostly-indoor maps with nothing
much to look at.
If that sounds fine to you, then there is another generator
(called SLIGE) which you can use instead.
</div>


<div id="material" class="gloss_term">
Material
</div><div class="gloss_define">
XXX
</div>


<div id="mega_seed" class="gloss_term">
Mega-Seed
</div><div class="gloss_define">
An area on the map consisting of more than one seed, used to
create larger structures (like wide doors or big prefabs)
which normally cannot fit in a single seed.
</div>


<div id="prefab" class="gloss_term">
Prefab
</div><div class="gloss_define">
A mapping structure, such as a window or door, whose shape
and texturing have been designed by a person.  This is in
contrast to stuff like caves which are generated purely by
an algorithm.
</div>


<div id="prebuilt_level" class="gloss_term">
Prebuilt Level
</div><div class="gloss_define">
Levels which are not generated by Oblige, instead they are
made by a human and Oblige merely copies them into the
output file.
Boss maps usually have special requirements which are
hard to account for.
Hence it is much easier for someone to "pre-build" them
in a map editor.
</div>


<div id="seed" class="gloss_term">
Seed
</div><div class="gloss_define">
In the GUI, the seed is a 5-digit value which is used to
setup the random-number generator.  The same seed value
produces the same random numbers, and hence the same levels
(when all other settings are the same).

<p>
In the Lua code, a seed is a square region on the 2D map,
which is 192x192 in size.
In theory, each seed represents a single mapping construct,
such as a walkway, stair, lift, switch, pillar, or a spot for a
monster.  The sides of each seed can be used for walls, doors,
windows, etc...
</div>


<div id="scenic" class="gloss_term">
Scenic
</div><div class="gloss_define">
A room or area which the player never visits, and is only used
for decoration.
</div>

<div id="sub_room" class="gloss_term">
Sub-Room
</div><div class="gloss_define">
A room which lies inside another room.  The sub-room is also
called the child and the outer room is the parent.
</div>

<div id="sub_theme" class="gloss_term">
Sub-Theme
</div><div class="gloss_define">
This term refers to the actual ...
A "full" theme 
</div>

<div id="svn" class="gloss_term">
SVN
</div><div class="gloss_define">
SVN is short for Subversion, which is a system for storing code
on a server computer and letting multiple people edit the code
on their own computers.  It ensures that each developer's
changes get distributed to all the other developers.
It also stores a history of all changes, and each change
can have a message describing what was done.

<p>
Oblige's SVN respository .... @@@@
LINKY

</div>
  

<div id="v1" class="gloss_term">
V1
</div><div class="gloss_define">
The very first prototype of OBLIGE.
It could not do very much and was never publicly released.
</div>


<div id="v2" class="gloss_term">
V2 / OB2
</div><div class="gloss_define">
The older versions of OBLIGE ...
ObligeNG :-)
These had version numbers starting with zero (such as 0.85).

Severe limitations in the code prompted a rewrite, which
became the V3 version.
</div>


<div id="v3" class="gloss_term">
V3 / OB3
</div><div class="gloss_define">

The current versions of OBLIGE,
</div>


</div class="rest">

<file include="x_footer.inc">

