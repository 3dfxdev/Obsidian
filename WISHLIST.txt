
OBLIGE WISH-LIST
================

*  get more games working (Heretic, Hexen etc)

*  support for Traps, Cages, Secrets, Powerups

*  add in more scenery: lamps, computers etc


*  get cave code working again

*  escapable slime pits

*  symmetrical rooms


----------------------------------------------------------------
  OTHER GAMES
----------------------------------------------------------------

+  Duke Nukem 3D

-  Chex Quest 1, 2, 3

-  Doom64 TC

?  Blood
?  Shadow Warrior

?  Dark Forces

?  Sonic Robo Blast 2


----------------------------------------------------------------
  LEVEL STUFF
----------------------------------------------------------------

Miscellaneous:
  +  when deciding outdoors, have a section quota

  +  special logic to merge THEME_DEFAULTS tables??

  +  when traversibility in a room is poor (exit near entrance),
     make the exit into a switched door and put a switch at other
     end of room.

  -  in a large (multi-section) room, if any section has no "events"
     (a connection or switch or key or major item) then give it a
     nice pickup item (etc) or at least a walk space.

  -  "mini stairs" : two areas have largish height diff (2-4 * step)
     and the "stair" is a short intrusion in the side of the lower
     chunk (say no more than 32 units deep, a prefab).

  -  3D chunk stuff : use z_low and z_high fields

  -  double or triple switches: each one raises a 24 unit stair,
     but player can only traverse stairs when ALL are raised.
     Might work best if stairs are parallel to height diff.

  -  ensure sky heights are higher than neighboring indoor rooms.

  -  prevent escapes over fences/windows near key pedestals (etc) by
     raising the height of the fences/windows there.

  -  brush conditionals:  if_true="?doomy"  if_false="?foobie"

  -  can disable the custom levels

  -  more than one theme per episode.

  -  rarity for bfg10k and railgun for Skulltag

  -  properly count svolume

  ?  PARAM.angle_format = "pyr"  -- for pitch/yaw/roll

  -  lifts often assume meshing up at 90 degree turns

  -  log-print CSG stats (e.g. linedef count, plane count, etc)



Teleporters:
  -  able to place separate entry and exit spots
     (especially for Quake and Quake II)

  -  ability to link two (far apart) areas via teleporters  

  -  more games : Hexen (X_012) and Chex Quest 1/2/3


Hallways:

-  Special Hallway #1 : surround half the room, entrance either side
-  Special Hallway #2 : surround a corner of large room, two entrances
-  Special Hallway #3 : surround a room completely.
-  Special Hallway #4 : diagonal from one to another (alloc '+' shape)


Hallway Theming:
  Wood# (Namely Wood1, Wood3 and Wood5...Wood4 is the one with skulls on it
  and might look silly), Woodmet1, Skin2, GSTONE1/SP_HOT1 and Skinmet#
  textures would fit well in the HELL theme (Note Woodmet# textures are Doom2
  only, everything else works in both games)

  PANCASE2 would fit well for Doom2 Urban hallways.



Monsters:
  -  give each monster a "class" field (e.g. class="undead")
     and have a strong tendency to use the same class of
     monster for the fodder in a room (or group of rooms).

  -  support "Swarms" : a group of 3-N monsters (either a
     single monster or 2-3 of a certain class), and place
     all the monsters close to each other, perhaps even
     have swarm patterns.


Hollows:
   a "hollow" is an open space under the floor of a normal AREA,
   turning that AREA into a 3D platform.
   
   That space can/should be represented by separate chunks
   (maybe an actual AREA object ??)

   The floor needs to match a touching AREA, perhaps the hollow
   chunks become part of that AREA.

   The walls can/should have different thickness to the
   above chunks -- could have own pictures/lights/etc.

   The ceiling should be kept simple -- assume top chunk
   provides the bare structure, can add a light prefab.

   Both chunks can support monsters and items [unless
   the hollow has LAVA/WATER for the floor]


Intrusions:
  -  this idea is that part of a room is reserved for the player
     to travel through in an earlier or later quest.  If the
     quest is earlier, then the player is prevented from entering
     that room (due to blocking railings or being too low down).

     It's like a kind of window, except the intrusion is built
     as if it were part of the room you look into.  It may work
     best in Quake games where the intrusion is a 3D walkway.

  +  implement them by "adopting" a hallway consisting of
     HORIZ + JUNC + VERT (around corner of the room)

  -  could potentially adopt the whole section
     [OR any seeds which are not part of the room paths]

  Q/ keep as a "hallway" or create an "area" ?
  A/ turn into an area


CrossOvers:
  -  room is 1x1 sections (perhaps 2x1) using a 3D bridge,
     so that one path goes E/W and other path goes N/S.
     [90 degree turns are possible too, but way less cool]

     Crossovers do NOT exist as nodes in the connection map
     (they only exist as links).

     Two crossovers cannot connect to each other (because they
     would need a node between them, which doesn't exist).

     The quest of the low path is earlier than the quest of the
     high path (3D bridge).

  +  make a moving platform in Quake 1/2 maps

  -  pillars holding up the bridge

  -  bridges which increase height (e.g. stair in middle)

  -  channels which decrease height  [via prefab??]

  -  try to create through a reclaimed joiner (middle of CCC etc)

  -  give areas near incompatible height a 'target_h' field


Lock postponing:
  after decided all locked conns, pick one and if next room is a
  stalk, then can move the lock to the next door (and the next room
  becomes part of the earlier quest).


Porches:
  -  this is 3 or more seeds around a door from outside->inside
     with a non-sky ceiling and some pillars and a raised floor.


Facades:
  -  would be nice to "smooth" any odd-one-outs

  -  ability to ensure both inner/outer are the same
     [perhaps a room_theme setting]


Quests:

-  currently broken if no switches
   -  have a lock limit, if over then mark branches as "dead_wood"
   -  keep track of number of "branches to go"

Idea: "single minis" : a single room (not too big, kvolume <= 2)
      which contains something nice to get (weapon, powerup, etc).

-  sometimes lock another connection (ESP: symmetry)
   with the same lock as one we just added
   [ESP: when new lock goes to leaf or semi-leaf]


Caves:

-  improve the jaggy edge algorithm (support corner triangles)

-  re-instate size check (on main empty region), and remove the
   other empty regions.

+  fix spot_for_wotsit

-  furthest_point() : away from N points (conns)
   --> create a distance map

+  fix monster spots
+  fix pickup spots


Natural areas:
  -  height changes?

  -  better bordering with outdoor areas, how??

  -  support last layer being a deep liquid or even solid,
     this requires monster/pickup spots to be done later

  -  windows facing landscapes : clear the cave in front

  -  MIDVINE sometimes used at cave transitions
     (probably need a new prefab for this)



Lighting:
  -  support w_face.light (maybe even have 'light' in MATERIALS ?)

  FIX: shadows on outdoor crates: CRATE_W_SHADOW prefab?


Planner:
-  review / improve 'emergency' connections


Windows:
  - better patterns:
    (1) flank door mode
    (2) every second seed mode

  - put in indoor children rooms which don't connect to parent


Ceilings:
  + or a criss-cross of beams, especially with pillars or
    low opposite sides.  [NOTE: can mess up lifts!]

  - put several small light fittings/sky holes with
    simple patterns (e.g. inner 2x2 seeds, or outer corners)

  - big room with no sky neighbours: have a huge sky hole

  - mega sky holes (two in one, esp. outer has F_SKY1)


Pictures:
  - implement "billboards", pictures which jut down from the
    ceiling (above doors and low periphs).


Possible Options:
-  glBSP section:
   -  more accurate nodes (slower)
   -  pack sidedefs


Cycles:
  +  less chance if R2 (skipped room) is large

  -  create "teleporter cycles" i.e. if R1 -> R2 -> R3 and one
     connection is a teleporter, try add teleporter from R1 -> R3.

  -  prevent using section next door to existing conn & same direction
     [maybe prevent same dir altogether except in "heaps"]


Mazes:

-  invert maze + thin_out + cave_render --> interesting walkway
                                            (e.g. over lava)


----------------------------------------------------------------
  GUI and C++ CODE
----------------------------------------------------------------

IDEA:
  - move main loop of OBLIGE into Lua (e.g. ob_main_loop)
  - C++ can queue commands to perform, fetched by the Lua loop
    (this is only mechanism for C++ to "call" Lua code)
  ? the console is a text-based interface whereas the GUI
    is the graphical interface, both using the same mechanism.
  - build the debugger using Lua

Console:
  +  display lists better


----------------------------------------------------------------
  LUA EXTENSIONS
----------------------------------------------------------------

+  bug where errors show the wrong line number

-  transfer Lua_Extended.txt document to the website
   (part of modding guide).

NO: allow numbers to begin with plus, like: +3
    --> see misc/plus_number.diff

NO: implement 2D array access: [x, y] --> [x][y]
    --> there's a power patch for that


----------------------------------------------------------------
  DOOM and DOOM II
----------------------------------------------------------------

>> for DOOM 1, have a separate theme for Episode 2

!!  rethink way lighting is done, probably use light brushes for
    every situation (regions without a primary light brush get
    flood filled with a value less than nearest light).

    Also allow light brushes to eat other ones in certain cases
    (e.g. a shadow brush may override a low-level light brush).

-  move light brush intensity value to props[] 

+  support MAPINFO lumps (especially for ZDoom ports).

-  support for the DECORATE lump

-  better starting scenarios (e.g. fix raising_starts)

-  MAP32: find and kill all the Keens to open the door to the exit.
          perhaps use Psychedelic theme and a lower qty Crazy mode.

NO:  CSG DOOM: support entity.light

-  support BOOM's 242 linetype for liquids and fake 3D floors

-  Legacy liquids are different (ceiling height is surface)
   (use legacy method for GZDoom and Skulltag)

-  DOOM: fix y_offset values
    (when have y_offset and brush side is truncated/extended)

-  only use separated teleporters in large rooms (kvol >= 3)

-  generate episode names (M_EPI# etc).

-  Rail brushes: support fake 3D bridges
                 (create dummy sector from brush's Z2)

-  give sky_fence linedefs the 'never draw' flag

-  make light level of windows (esp. outdoor -> outdoor)
   slightly lower than surrounds.

.  build our own REJECT lump (use vis info like Quake)

-  ZDoom slopes:
   340 = 0,   Plane_Align (1, 0)  // Slope front floor
   341 = 0,   Plane_Align (0, 1)  // Slope front ceiling
   342 = 0,   Plane_Align (1, 1)  // Slope front floor and ceiling
   343 = 0,   Plane_Align (2, 0)  // Slope back floor
   344 = 0,   Plane_Align (0, 2)  // Slope back ceiling
   345 = 0,   Plane_Align (2, 2)  // Slope back floor and ceiling
   346 = 0,   Plane_Align (2, 1)  // Slope b.f. and f.c.
   347 = 0,   Plane_Align (1, 2)  // Slope f.f. and b.c.


----------------------------------------------------------------
  FINAL DOOM
----------------------------------------------------------------

-  TNT Evilution textures that have been changed:
     BLODGR1..4  SLADRIP1..3  SW1GSTON    SW1SKULL

-  Plutonia textures that have been changed:
     DBRAIN1..4  FIREBLU1..2  SW1SKULL

-  Plutonia has 'WFALL1..4' textures for water


----------------------------------------------------------------
  HACX
----------------------------------------------------------------

+  complete the MATERIALS table

-  finish the ENTITIES table (trees etc)


----------------------------------------------------------------
  CHEX QUEST
----------------------------------------------------------------

+  finish Chex 3 MATERIALS table (the "XX" stuff)

+  implement basic theme for Chex 2 and Chex 3

-  make some good themes :)

-  ensure that Oblige logos work in all games

?  a pwad with textures/flats to smooth out compat issues
   and make certain materials more usable.


----------------------------------------------------------------
  HERETIC
----------------------------------------------------------------

-  don't build Blaze doors into maps.

-  monsters: not mixed enough (too repetitive), no bosses.

-  weapons: firemace no good for SP/COOP ??

Sam's suggestions:
  for Heretic caves should be rare in E1, common in E2, and somewhat common
  in E3. I would, if going along with the “Egypt Sand” theme I made for
  ObHack’s E4 in Heretic, make caverns about as common as they are in E3.

  I would give E2 caverns pretty much the same theme as they have in ObHack;
  E3 should be pretty much like E1, but I would make the occasional cavern in
  E3 be very watery (water flowing down walls and the floor being full of
  pools), or be like some areas in the original E3M7.


----------------------------------------------------------------
  HEXEN
----------------------------------------------------------------

!! fix weapons, which should be spawned for each class 

!! proper hub system

+  separate prefab for switched vs locked doors

+  support more skies

+  put 'fighter only' bit on fighter's weapons, etc..

-  IDEA: have a DEFAULT_ARGS table for each line special,
         so that prefabs (etc) aren't cluttered with arguments.

-  need arg1 .. arg5 in faces, Lua code to assign tag number

-  need exit teleporter in final Hub.

-  make teleporter gates bi-directional.


----------------------------------------------------------------
  STRIFE
----------------------------------------------------------------

!!  get it working


----------------------------------------------------------------
  DUKE NUKEM 3D
----------------------------------------------------------------

!!  get it working again (in case it broke)

!  exit buttons

!  Oblige logos: create 'TILES020.ART' lump

+  merge sectors where possible:
   -  same properties on both sides
   -  the removed walls form a single chain (not separate)

+  monsters
+  weapons
+  health and ammo

+  working doors
+  keys and switches

-  fake 3D bridges (created via sprites)


----------------------------------------------------------------
  QUAKE
----------------------------------------------------------------

+  slopes!
   -  for clipping, force a node line where slope flattens out,
      then mark one side as sloped - other side as flat.

+  better texture alignment

+  better miptex handling:
   -  support multiple WD2 files : gui.quake_add_textures
   -  create OBLIGE logos : gui.quake_make_logo()

-  LAVA: style=5, have "lava light" similar to "sun light"

-  support the Boss maps (next map = "start")
     E2M6 : wood floor, funky bridge, kill vores to get rune
     E3M6 : castley, lavay, teleport-in fiend
     E4M7 : blue maze, spawn, kill vores to get rune

-  better exits

-  CalcPoints : move edges inwards by 2 pixels

-  visibility: support diagonals, check if any sides in a cluster
               touch or cross a line between corners.

-  nail/spike shooters FTW : good in hallways

-  create faces from stacked brushes behind a gap (cf. oa_dm7)

-  Option to create _debugging_ MAP file

-  Option for shrinking textures to 32x32 (scaled in-map)
   which would only require 1/4 of the lightmap space
   (and hence less likely to run out of it)

-  support colored lighting (FitzQuake, Darkplaces, etc).
   - add an entry in the pack called "maps/xxx.lit", which
   - it should contain: QLIT 1 0 0 0 <data>

?  create dummy .lit files for FitzQuake & DarkPlaces
   -  gui.pak_add_binary_lump

?  keys are removed after use : re-use them ??


----------------------------------------------------------------
  QUAKE II
----------------------------------------------------------------

+  proper hub system

-  create oblige logos (.wal entries)


----------------------------------------------------------------
  HEXEN II
----------------------------------------------------------------

+  proper 'level', 'prob' and 'density' fields for MONSTERS

-  IDEA: faster clipping hulls:
   -  re-use #2 for #5 (adjust for floor Z diff)
   -  re-use #3 or render BSP for #4 (pentacles)


----------------------------------------------------------------
  HALF-LIFE
----------------------------------------------------------------

-  fix the sky

-  create miptex: "error" "missing" "o_carve" (w/ palette)

-  Skies: 2desert black city cliff desert dusk morning
          neb1 neb2 neb6 neb7 night space
          alien1 alien2 alien3 xeno8 xeno9 xeno10


----------------------------------------------------------------
  QUAKE III
----------------------------------------------------------------

!!  get it working

-  surfaceType = MST_PLANAR

-  LUMP_DRAWINDEXES contains offsets from the base drawvert
   of a surface.  Probably only need to create fans, i.e.
   0 1 2  0 2 3  0 3 4  0 4 5  ...  0 63 64

-  can leave LUMP_LIGHTMAPS and LUMP_LIGHTGRID empty

-  can leave LUMP_VISIBILITY empty, LUMP_FOGS too


----------------------------------------------------------------
  MISCELLANEOUS
----------------------------------------------------------------

+  in batch mode, detect invalid game=XXX (etc) keywords


Secrets:

-  fix battle simulator to ignore stuff got in secrets
   (push state onto stack, pop afterwards).

-  different item probs, e.g. invuln & berserk are good


Co-op mode:

-  "checkpoint" areas that players pass through, with loads of
   ammunition or health, enough to allow players to restock


Name generator:

-  create random weird-looking words for names of Bosses, planets
   or whatever.  Use them multiple times over an episode or game
   to make it seem like there is a actual story to the maps.


++  put in some Cyberdemons or Spider Masterminds

-  at each room, pick 2-3 (rarer: 1,4) monster types
   then decide how many of each one (for each skill).

-  monster adjustment: don't just increase toughness, actually
   create _more_ monsters.

-  IDEA: treat groups of rooms (esp: multi starts and forked
         paths) as a SINGLE BATTLE ARENA.

-  cage monsters: don't put hitscan snipers up really high.


----------------------------------------------------------------
  PIPE DREAMS
----------------------------------------------------------------

+  diagonal chunks

>>  teleporters!   (RED is two-way, WHITE is one-way)

+  make Oblige easier to mod.

+  generate the Boss maps (don't use prebuilt).

-  raising bridges (activate by a switch)

-  light up levels (a la quake).

-  exit via teleporter pad or holes in floor

-  improved use of liquids.

-  fight simulator: take amount of cover into account

-  a module or style for Claustrophic levels

-  PDAs or checkpoints, where the game is automatically saved
   (and the player will return to that spot when they die).

-  "Horror" mode: fewer but tougher monsters, fewer ammo, darker levels.

-  more Oblige logos, higher resolution ones too

-  Rooms that lock you in and you have to find the switch on
   the other side of the room to get out.  All "normal" exits
   would be closed off by a line trigger near the entry way.

-  Pop-up Traps
   you make a sector, lower it enough so monsters cannot see
   the player but are facing him when it springs. The trap walls have
   no lower texture and you set the trigger line to action 19 ( W1
   floor lower to highest floor) and you set the trap monsters deaf so
   they aren't awakened by player gunshots.

   When the player trips the linedef, the floors instantly pop up to
   the nearest floor height without the rising delay of some other
   linedef actions. Another thing is to make sure the line that
   triggers the trap can't be bypassed and thus the player can get
   stuck in the hole if he falls in.

-  Surprise Lifts:
   It is a hallway/room section that looks normal but when the player
   crosses the Lift-Lower-Wait-Rise linedef, it lowers to surprise the
   player with monsters on one or both sides of the lift.

-  Dead/gibbed player corpses sprinkled around on each level (Just
   like Doom episode 1) with the chance of a weapon near their
   remains (Shotgun 35%, chaingun 30%, Supershot 15%, rocket
   launcher 15% and plasmagun 5%?)? Of course the weapon placement
   by the body is at a chance (15-20% chance?)

-  Type of boss battles JohnnyRancid would like to see:
      20+ revenants.
      2-5 arch viles.
      5-10 pain elementals
      2 cyberdemons.
      20+ hell barons or hell knights.
      20+ cacodemons.
      5-15 mancubi
      5-15 arachnatrons

-  CTF maps (boomctf) :
       5130 = "Blue flag";
       5131 = "Red flag";
       5080 = "Blue Start"      
       5081 = "Red Start"


----------------------------------------------------------------
  IDEAS AND BRAINSTORMS
----------------------------------------------------------------

+  Composition of prefabs

-  in some (esp. large) rooms, sometimes try to always go up 
   or always go down.  Rarely: do it for whole level

-  module help / explanations ?? (appear above the options)

-  CSG: clipping rectangles (typically a room)

-  friendly monsters

>>  have a table listing a quantized HSV for each texture/flat
    and make aesthetic decisions using it.



MUSIC RE-ORDERING

   *  Doom 1: shuffle each episode

   *  Doom 2: if one episode (or less), pick random tracks and
              ensure that no two tracks have the same three-letter
              prefix.

   *  Doom 2, full game: shuffle tracks, loop a few times looking
                         for repeats (same three-letter prefix in a
                         row) and move one to random spot.

   -  BOOM: [MUSIC] section in BEX

          [MUSIC]
          ROMERO = RUNNIN
          RUNNIN = STALKS
          STALKS = ROMERO

   -  EDGE native:  DDFPLAY lump:
   
          <PLAYLISTS>
          [01]
          MUSICINFO=MUS:LUMP:"D_RUNNIN";

   -  ZDoom : via MAPINFO: music D_RUNNING



EDGE: gui.property("solid_exfloor", 400)
      gui.property("liquid_exfloor", 406)
      gui.property("thing_exfloor_flags", "true")

LEGACY: gui.property("solid_exfloor", 281)
        gui.property("liquid_exfloor", 280)  -- 301


 _____________________
|                     |
|KEY:                 |
|    !!  critical     |
|    +   important    |
|    -   plain item   |
|    >>  in progress  |
|    ??  not sure     |
|_____________________|

