
WORK IN PROGRESS
================


Quake3 CSG Code
---------------

+  better triangulation  [ review q3map2 code ]

+  lighting
   >>  optimise detail face intersection

   - "noshadow" for brushes / faces

   + a shared lightmap for 100% low-light

   + implement ambient system -- every face belongs to a "room" and
     ambient value for the room is specified by Lua
     [ for grid lighting, find face directly underneath point ]

-  brushlib function to visit side faces, and if they
   contain u1/u2/v1/v2 then compute the uv_mat

-  brushlib function to visit top/bottom faces, and generate
   a uv_mat if the sides contain tu/tv/bu/bv values

LATER : re-implement super-sampling for lighting

LATER : reject detail surfaces lying completely inside a solid brush

DONE:  visibility
DONE:  clip brushes
DONE:  sky surfaces
DONE:  sloped floors and ceilings
DONE:  liquid areas and surfaces
DONE:  mapmodels


