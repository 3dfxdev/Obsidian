
WORK IN PROGRESS
================


-  create an Archy arch

?  multiple ways into a room



CEILINGS:

-  better logic for heights

   e.g. group areas into 'floor_group' -- same floor but different
   ceiling stuff (SKY vs LIGHTS vs PLAIN) and different lighting
   but same wall decoration



TRAPS:

+  monster closets which open in PREVIOUS (back-track) room
   [ visit rooms with goals in them _before_ other rooms ]

+  for each trappable item/goal in a room [ upto max of 2 ]
   decide whether to create a closet trap (using a nearby unused closets)
   or a teleport trap

+  number of traps depends heavily on ROOM.pressure

-  number of traps affected by LEV.game_along
   [ e.g. double at end of wad than start ]

+  get teleport traps working again
   do monster depots differently, make "shared" sector based on
   an entry area of second room in the level



NEW LIGHTING:

-  outdoor closets/joiners should NOT have AMBIENT = sky_light
   [ unless they are "open top" -- but not handled yet ]

+  compute better "AREA.lighting" values
   +  use logic like for "pressure" to make some dark rooms
   -  walls/pictures/etc with lights are summed
   -  floor/ceiling prefabs with lights also add to sum
   -  if has sink with ceiling light or sky, use an absolute value
   -  if neighbor areas is much higher, increase us  [ but no flow-on! ]

-  for wall prefabs and closets in outdoor rooms, ones facing a
   certain direction should use "shadow" light value as ambient

-  for joiners and doors/windows : pick a value roughly between
   the two sides.  E.g. if diff == 32, use lowest + 16
   When diff == 16, use the ENTRY side.



SINKS:

+  get them working again

-  treat areas with same 'floor_group'/'ceil_group' as same when
   deciding sink boundaries

-  floor sinks inhibit floor-decorations (similar for ceiling sinks)

?  don't make sink if floor_group contains a chunk used for a key/switch



WALLS:

+  get the decorative walls working nicely
   [ pick one per area or floor_group ]

   -  support GROUP objects in 'GROUPS' table

   -  the name is always: kind .. "_" .. groupname

   -  support "env", "theme" (etc??) fields

   -  if nothing found, fall back to non-group lookup

