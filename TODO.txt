
TODO
====


merge area_info + area_poly --> csg_brush_c


HEXEN lua: gui.property("hexen_format", "true")

SPEAR lua: gui.property("extension", "SOD")

EDGE: gui.property("solid_exfloor", 400)
      gui.property("liquid_exfloor", 406)
      gui.property("thing_exfloor_flags", "true")

LEGACY: gui.property("solid_exfloor", 281)
        gui.property("liquid_exfloor", 280)


q1_nodes:
  -  floor_leaf --> leaf
  ?? move floor/ceiling faces into leaf.faces (instead of leaf.floor)

q2_nodes:
   use cluster=-1 for SOLID leafs

   create a solid leaf for each area_poly
   (can sometimes have 2+ area_polys per solid leaf, walls with stacked brushes)
   NOTE: need CONVEX brush sides : if not convex, find closest
         concave point to face and "chop" there
         _OR_: use bsp to chop em up
   ALSO: handle co-planer sides (allowed by Oblige, maybe ok for Q2, not sure)


REWRITE:

>>> NEW BRANCH SYSTEM

  - emergency connections ???

  - physical bridges to connect some/most areas cut-off from
    each other by Lava.

+ quest assignment !!

  - pick rooms for BOSS monsters

  - decide minor quests

  ? allocate seeds for teleporters,bosses,switches,items

+ room heights
  - outdoor rooms generally stay fixed (+/- 32 variation)
  - if indoor room touches outdoor, room has same height
    [especially src.outdoor --> dest.indoor]
  - for indoor target rooms choose random height
  - if start room is indoor, choose random height
  - select heights along each path

  - several "gap fill" passes: unset rooms in-between two set rooms
    will get a height in-between (depending on height diff and
    randomness).  2-branch Hallways in between two set rooms become
    stairwells.  3+-branch hallways get same height as entry room.
  - one "flood fill" pass then two "gap fills", rinse repeat.
    indoor rooms connected by lock: use same height
    3+Hallways 

- create doors, stairs/lifts

+ build Hallways:
  - for two exits, create optimal path (L or /\/ shape)
  - for three exits (where two are opposite), optimal path (T shape)
  - for rooms >= 3x3 and 3+ exits, properly create O or U shape path
  - occasionaly: height diff, spaced steps (two exit only)
  - rarely: make a maze (large room only)

- document classes (PLAN, SEED, ROOM, QUEST)



QUAKE:

+ fix bounding boxes for everything (especially Leafs)

+ create faces from stacked brushes behind a gap (cf. oa_dm7)

- clipping hulls:

++ grab Q1 textures directly from PAK files
   ??? code to check if data/quake_tex.wad exists
   ? gui.property("texture_wad", "data/oq_tex.wad")
   ? gui.property("needed_pak",  "pak0.pak")

- create "oblige" logo miptex [.wal for QuakeII]

++ perform lighting

++ perform visibility

  ?? convert portal sides into portal faces


DOOM ENTITY PROPS:
  angle
  options
  tid
  special
  args


QUAKE1 ENTITY PROPS:
  light
  spawnflags
  target
  targetname
  speed
  next stop



General:

+  create special BOSS levels (e.g. E1M8, MAP30)

+  get traps (closets / depots) working again.

-  make the EASY skill much easier (less monsters)

-  Deathmatch: implement DM-Equipment module

-  FreeDoom: some scenery items (hanging gore) have no sprites

?  put all important constants/tables into defs.lua


GUI / C++:

-  ui_chooser: support last_file in WIN32
      maybe this: lpstrFile contains _base_ of file (FOO.EXT)
              and lpstrInitialDir contains _path_ of last file.
      probably only set it once (first call).

+  get the 'Unixy' type of installation working, and
   write a INSTALL.txt with some useful information.

-  on serious script errors: remember it, so that we
   don't try calling into LUA to write the config.

-  Batch mode:
   .  -b(atch) builds then quits
   .  -o(utput) for output filename
   .  set parameters via command-line : xxx=aaa yyy=bbb (non-options)
   .  option to read a different config file: -c(onfig)
   .  never writes the config file
   ?? what to do on error ??

-  improve icon for Win32 executable.

-  ideas for remaining button (YYY) :
   -  Secrets   (would be useless for DM)
   -  Powerups
   -  Outdoor-iness
   -  Lighting adjustment
   -  Big monster adjustment
   +  Linearity

-  make sure target dir is writable _before_ making levels.
   (have a "CheckDirWritable" function?)


DOOM

-  support keycards


HERETIC:

-  don't build Blaze doors into maps.

-  monsters: not mixed enough (too repetitive), no bosses.

-  weapons: firemace no good for SP/COOP ??


HEXEN:

-  put 'fighter only' bit on fighter's weapons, etc..

+  bug report: some doors close and never open.

+  rework teleporter gates (make them bi-directional).

+  fix key usage (REQUIRE both to get to boss level).


WOLF3d:

   + push-walls for secret quests!
   + secret elevators
   + bosses!

   - decide_monster : skills are "tiered"
   - health/ammo : no skills! -- use medium one
   - place_items : never where monsters are!
   - create rooms with 'endgame' object.

   + ensure limits are enforced:
     - MAXACTORS = 150  (remove actors at random)
     - MAXSTATS  = 400  (remove statics at random)
     - MAXDOORS  = 64   (remove unneeded doors at random)

   - patrolling monsters (need to create path with arrows).
   - secret levels (full of treasure)
   - something interesting in middle of big rooms.
   - elevator "entry" in first room.


Docs:

-  note that you need full version of XXX to play the games
   (shareware won't work).


Secrets:

-  fix battle simulator to ignore stuff got in secrets
   (push state onto stack, pop afterwards).

-  different item probs, e.g. invuln & berserk are good


Theme system:

-  Room types:

   (a) storage   (crates, barrels)
   (b) quarters  (tables, chairs, beds)
   (c) bathroom
   (d) computer
   (e) library

   (f) armoury | supplies
   (g) processing plant (machines)
   (h) torture  (wolf3d/SOD)


Monsters:

++  put in some Cyberdemons or Spider Masterminds

-  at each room, pick 2-3 (rarer: 1,4) monster types
   then decide how many of each one (for each skill).

-  monster adjustment: don't just increase toughness, actually
   create _more_ monsters.

-  battle_in_cell: arrange it so that cells could be visited
   in any area (as much as possible).  Allow e.g. multiple
   starting cells, "forked" paths (path splits and rejoins)...

   IDEA: treat groups of cells (esp: multi starts and forked
         paths) as a SINGLE BATTLE ARENA.

-  idea: horde_size depends on (pl_weap.fp - monst.fp)

-  cage monsters: don't put hitscan snipers up really high.


Miscellaneous:

+  don't put monsters/pickups/scenery on normal Prefabs.

+  prefabs: improve "kind" fields, allow "x_offset" fields
   default to 0.

-  make key doors open-and-stay-open.

-  WINDOW_CROSS and WINDOW_CROSS_BIG: do a height check
   (prevent windows you can walk through).


Pipe Dreams:

++ better global architecture, room-in-a-room.

+  teleporters!

+  make Oblige easier to mod.

-  bridges (activate by a switch)

-  light up levels (a la quake).

-  exit via teleporter pad or holes in floor

-  improved use of liquids.

-  "Horror" mode: fewer but tougher monsters, fewer ammo, darker levels.

-  a mod for Eternal III

-  CTF maps (boomctf) :

      5130 = "Blue flag";
      5131 = "Red flag";

      5080 = "Blue Start"      
      5081 = "Red Start"

?? one-way routes ??
   -  for example: at along:3 fall-off -> along:4
      BUT... how to get back to along:3 ??
      WITHOUT creating an alternative path?
      ANSWER: use another one-way connection

   - One way connections:
     (a) fall-offs
     (b) teleporters
     (c) doors that only open from one side (esp. via a switch)
     (d) lifts that go up (or down) into a hole
         (activated by a switch only on one side).


 ____________________
|KEY:                |
|    #  completed    |
|    -  plain item   |
|    +  important    |
|    >> in progress  |
|    ?? not sure     |
|____________________|

