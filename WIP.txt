
WORK IN PROGRESS
================


>> tri_pillar


WAD Prefabs
-----------

+  determine pathname PROPERLY

-  use x_ranges for wall/window prefabs (to scale 192 --> 256)

!!  rail textures  [new method?]

DONE:  FWATER4 used for missing bits (support but deprecate LAVA4)

+  simpler z_ranges : specify a single range which scales

-  create monster and item spots:
   +  review current spot system
   +  use the fab.spots table 

-  line flags (e.g. blocking)

-  mechanism to get side texture from floor/ceil
   (e.g. set side to CRACKLE2
   requires MATERIALS table to be fairly complete

-  NO: ability to "pick" the sector at a point / edge / corner and get the height there

   YES: use tag numbers for "main floor", "neighbor floor" (etc)
        and can set that sector to a certain material (floor, floor2, etc)

        102 = south (main floor)
        108 = north (neighbor floor)
        104 = east
        106 = west



-  in prefabs with doors, use tagged (SR or S1) specials


========================================================================

!!  proper Unixy compile/install in Linux


-  pick mini_halls at areas_handle_connections

+  sky spread algo
   (a) check 2 seeds away on each dir (i.e. through mini-halls)
   (b) handle caves too

+  re-think switches/locked_doors selection : USE GROUPS?



!!  fix pick_sizes and max_W, max_H

!!  Street mode : if one room surrounds another one, the "streets"
    between them are isolated from the rest, leading to this error:

      Script Error: Failed to find any height in grid neighbors

    --> detect this, make multiple rooms


- Psychedelic mode has a few issues. Exit signs / doors are
  replaced now where they weren't before, and the bars in
  monster cages are replaced by solid-looking walls. This
  makes it so you can't see what's inside them shooting at
  you, but they can clearly see you.

- make secrets more secret


========================================================================


>>>  add pillars (via. C.content.kind = "DECORATION"
                       C.content.decor_prefab = "Pillar_2")

>>>  add crates too (pick prefab from THEME.indoor_fabs)

>>>  add pits too (set C.floor_prefab = "Pit_Test")

>>>  fix chunk_is_mungeable()


Current Goals:

(4) add some floor/ceiling prefabs:
      (a) crates
      (b) ceiling lights / sky holes
      (c) pillars


-----------------------------------------------------------------


-   for 'mon_along' calculation -- ideally take it out of
    the game specific code (can modify it via PARAM or THEME).

-  check health and ammo distribution (too much in start room?)


+  HEXEN and QUAKE : fix hallway lifts

-  FAT_CAGE_PILLAR

-  doors are walls, hence should be XYZ fitted

+  x_repeat should be a skin thang

-  use 'pictures' in room themes, if exists

-  do mirroring in prefab space (only really need X)


+  Need logic to decide how to light up a room (windows vs wall
   lights vs ceilings lights etc).

-  separate (or at least mark) pictures that serve as main light
   sources for an area / room.  [QUAKE]

Idea: GAME.SCOPED_VARS table which is like styles but (a) fields can
      be used in prefabs (b) a _scope field can be "zone", "level",
      "room", "episode" -- value remains constant over that scope.

+  have "hallway arches", specified in hallway groups, used in
   indoor rooms where the hallway meets the room.

-  prevent jumping over sky-hall sides (esp. QUAKE and HEXEN)


>>>  big_junction hallways : use 'mini_halls' instead of a hallway group

     also: some control over them
     (a) disable (or prefer) certain height diffs
     (b) disable doors (since big junction has a door there)
         [extends to doors at room/mini_hall connection]
     (c) can provide a skin with 'floor', 'wall' and/or 'ceil' materials
     (d) can specify other keywords which must be preset or absent in the skin


>>>  stairs / lift : standardize height stuff

     _elevation = "short" / "medium" / "tall" / "lift"

     z_ranges = { {128,0,"?height"}, ... }  in prefab to make it reach target height


+  mini hall room connection control:
      _outdoor = 0 / 1
      _building = 0 / 1
      _cave = 0 / 1

+  support height-changing mini-halls


3D Areas:

PATTERN LOGIC : skip patterns if (a) multiple levels,
                                 (b) 2+ chunks in that grid and all of them would
                                     end up in the same vhr
                              OR (b2) one chunk in grid but ends up at same vhr
                                      as all previously assigned chunks in room


+  fix monsters stuck in doors / corners of chunks


-----------------------------------------------------------------


>>  windows

>>  pictures in walls

>>  secret niches

-  normal doors  [c.f. mini-hall doors]

-  ceiling prefabs (esp. light fixtures)

-  floor prefabs (crates are great, cages are all the rage)

>>  better exits

-  liquid areas

Closets:
+  allow closet to be smaller than chunk, fill extra space with void

