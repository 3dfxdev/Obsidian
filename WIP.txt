
WORK IN PROGRESS
================


EXIT_GENERIC


!!!  handling of 2nd (etc) trunk rooms is now fucked

     [ IDEA: make teleporter trunks part of the sprout process.
             a room could create a closet for the teleporter,
             and that causes a new trunk to be created... ]


>>>  grower : when pruning rooms, totally remove dead joiners too


??? on LAST max_loop attempt, set sprout_bbox to boundary_bbox


Minor Goals
-----------

-  grower: compute a score early, do a check on first whole-seed
   "area" element and do the "max_size" check here too

-  if room has a boss/guard needing a large chunk, allocate those
   chunks early [ but allow importants to override in emergencies ]


stairs : prevent two stairs from touching


steepness : IF exist on a rule AND room is outdoor THEN prob *= 0.5



Exit Rooms
----------

+  force first area to be boss-monster spot (at least one), be tall enough

??  if exit room failed to sprout (or that room was killed) then
    force usage of a teleporter

-  ensure room (and trunk) is never killed

-  ensure a sprout is made, and grow that room ASAP
   [ if sprout room is killed or impossible, force a teleporter to exit ]

-  prevent first area from getting a decoration or floor sink



Major Goals
-----------

+  better room/map borders
   -  the fenced off pools from V7-WEIRD
   -  use cave code to make mountainy areas
   -  use cave code to make cavey/liquidy areas
   -  get the "park fence" logic working

+  hallway system
   -  made up of pieces (each one is a prefab)
   -  "terminator" pieces between hall and room
      [ need plain, key locked, switch locked versions... ]
   -  a "vent" style
   -  a "curvey" style like in V5
   -  a wide-ish one with stairs, like in V4



Quake3 CSG Code
---------------

+  better triangulation  [ review q3map2 code ]

+  implement ambient lighting -- every face belongs to a "room"
   and ambient light(s) for the room is specified by Lua

-  brushlib function to visit side faces, and if they
   contain u1/u2/v1/v2 then compute the uv_mat

-  brushlib function to visit top/bottom faces, and generate
   a uv_mat if the sides contain tu/tv/bu/bv values

LATER : optimise detail face intersection
        1. rebuild BSP tree ]
        2. reject faces lying completely inside a solid brush

