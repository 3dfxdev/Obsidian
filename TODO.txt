
TODO
----

ROOM SHAPES:

  + tendril trimming:
     (a) compute new total_blk, then shrink the tall poppies until
         reached target.  [in CAVE mode: shrink random tendrils]
     
     (b) OR: "chop" method: all tendrils over X length are chopped.
         how to decide 'X' for each rec in room??

     --> "prune", "hack" or "guillotine".
         trim_mode IN room_type/combo/theme
 

- properly use "player" / "quest" chunks

- "niche cages" (a la MAP13).

- put walk=1 at dist=2 from windows and doors

- verify_outer: only checking B.chunk.rmodel.f_h !

- OPTIMISE A* ALGORITHM

? create_path: "widen" it to at least 2 blocks in any direction.

- idea: combo.flood : liquid to use on f_min floors.


VISTAS:
  - solid/frame mode: only IN->OUT
  - rare: IN->IN, wire mode
  - very rare: OUT->IN

>> Vistas

   +  don't put monsters/pickups/scenery of dest room on them!

   +  great place for player start! or quest item! or teleport!


>>>  Prefabs:
 
   -  rename PLAIN to OBJECT_FLOOR, use OBJECT_CEILING too

   -  use more "f_add", instead of parm[]

   -  rework way pickup spots are done

   -  support "monster" spots

   +  use the standard heights more (low_h,mid_h,high_h)

   -  optimise find_fab_loc

   ?? move 'height_range' from PREFAB[] to XX_PREFABS defs.


-  player angles: FIX!!

+  monster angles: honor 'caps.four_dirs' and make damn sure
   that the face direction isn't into a solid wall.


>>> Theme system

-  Theme categories:

   (a) nature  (outdoor, grassy/rocky/muddy, water)
   (b) urban   (outdoor, bricks/concrete,  slime)

   (c) tech       (indoor, computers, lights, lifts) 
   (d) cave       (indoor, rocky/ashy, darkness, lava)
   (e) industrial (indoor, machines, lifts, crates, nukage)

   (h) hell    (indoor+outdoor, gstone, fire/lava, bodies, blood)

-  Room types:

   (a) storage   (crates, barrels)
   (b) quarters  (tables, chairs, beds)
   (c) bathroom
   (d) computer
   (e) library

   (f) armoury | supplies
   (g) processing plant (machines)
   (h) torture  (wolf3d/SOD)

   ...?


-  Improve toughness calcs:
   e.g. decide final quest toughness (e.g. 750-1500),
        then major quests (somewhat exponential)
        and minor quests (skew above/below major Q).

   - at each room, pick 2-3 (rarer: 1,4) monster types
     [depends on free space?]

     then decide how many of each one (for each skill).
     ??  choose lesser monster for lesser skill.

  ?? monster adjustment: don't just increase toughness, actually
                         create _more_ monsters.

  -  battle_in_cell: arrange it so that cells could be visited
     in any area (as much as possible).  Allow e.g. multiple
     starting cells, "forked" paths (path splits and rejoins)...

     IDEA: treat groups of cells (esp: multi starts and forked
           paths) as a SINGLE BATTLE ARENA.


-  Wolf3d mode:
 
   + secret elevators

   >> scenery! (room types: storage, dining)

   + ensure limits are enforced:
     - MAXACTORS = 150  (remove actors at random)
     - MAXSTATS  = 400  (remove statics at random)
     - MAXDOORS  = 64   (remove unneeded doors at random)

   TEST !!! : Elevator exit
   TEST !!! : decide_monster : skills are "tiered"

   - health/ammo : no skills! -- use medium one
   - place_items : never where monsters are!
   - don't place monsters near player start
   - patrolling monsters (need 2x1 space AND path with arrows).

   (later) bosses!
   (later) secret levels (full of treasure)
   (later) something interesting in middle of big rooms.
   (later) elevator "entry" in first room.
   (later) make sure elevators face east/west.
   (later) widen some arches.
   (later) pacman levels: decorate walls


>>  Corner and Border stuff:

   +  support sky_corner and T-junction sky_borders

   -  decide "kind" for corner (a la borders)

   -  hallway->hallway arches: different materials (wood/metal).

   -  windows: determine area can use first

-  "gappy" sky next to a building, caused by nudging an outdoor
   cell into another cell, and near an empty cell. Diagram:

      outdr >>|  XXX
              |
      ------+-+---------
            |
    building| EMPTY

    FIX A: give the mini-border the "solid" type (steal theme from building)
           (as if the EMPTY cell was a scenic=solid)

    FIX B: don't allow outdoor cells to be nudged in this situation.


-  support these liquid wall animations:

   (a) water --> FIREMAGx (W74A_1, W74A_2, W74B_1)
   (b) lava  --> ROCKREDx (WALL64_2, W64B_1, W64B_2)
   (c) slime --> BLODRIPx (RP2_1, RP2_2, RP2_3, RP2_4)


-  Heretic: not enough weapons (too many golems) near start.


-  make scenics more interesting (esp. for vistas)
   -  choose another theme / liquid
   ?? perhaps "merge" same type scenics into one big thingy

-  rename: 'switch'/'wall' fields of a switch (to 'wall'/'side').
-  rename: 'tex' fields of PICS and LIGHTS to 'pic_w' and 'lite_w'.
-  idea: 'corner' field for themes.
-  idea: "decorate" for middle of 3x3 chunk side

-  choose railings for windows/fences (per quest?)
-  sky_lights: decide sky based on "ceiling thickness"

-  fix cage railing when cage borders a higher chunk or Fence
   (raise fence to cage top and omit railing texture but keep IMPASS).
-  don't put a railing _between_ cages
-  exit "bumps" on floor outside -> ENTRY-WAYS
-  exit teleport method -> B_teleporter


GUI TODO
--------

+  remember save path in config file.

+  make an icon for Win32 executable.

-  different adjustment controls for DeathMatch levels.

TEST: handle the Abort button better, also glbsp failure.

TEST: a makefile (+ code) to install 'the unix way'.

TEST (Win32): look for 'scripts/' using EXE path.


Recent Changes (since 0.85)
---------------------------

+  different sized rooms

+  new prefab system, @@@

+  Wolf3D and Spear-of-Destiny support

+  theme/room_type system  @@@

+  balconies

-  Ultimate Doom: four episodes.

-  add single player start to deathmatch levels



MILESTONE 0  (reached!)
===========

Able to create a map of connected areas, with a
few items / monsters, and which works in DOOM.


MILESTONE 1  (reached!)
===========

a) Planning:

   #  proper quest structure, E branches off a cell
      between S and K.

   #  quests: KEY, SWITCH, WEAPON

b) Builder:
 
   #  create a reasonable room in each cell,

   #  create doors between rooms, KEYED when required

   #  add exit switch to final room

   #  player model: (health, armour, ammo, weapons)

   #  add some monsters
 
   #  add some supplies (health, ammo)

c) Writer:

   #  support fragments

   #  texture X alignment (esp. fragments)


MILESTONE 2  (reached!)
===========

#  working GUI interface using FLTK

#  build WAD files directly (no wadlc step).

#  use GLBSP plugin to build nodes automatically.

#  more architecture features:

   #  pillars
   #  lights / sky-holes in the ceiling
   #  paintings / computers / lights in the wall
   #  monster cages
   #  monster closets (esp. along a back-track route)
   #  monsters teleporting in


MILESTONE 3  (heaps left to do!!)
===========

#  larger rooms

#  allocation system for blocks (can_walk tests).

+  good support for the different games (Doom 1/2, Heretic, Hexen),
   and initial support for add-ons (Eternal, Osiris)

-  cage monsters: don't put hitscan snipers up really high.

-  wall switches: place in the wall! 

-  more mid-masked textures (esp. on windows)
-  prefer not to create void chunks next to windows
-  doors: underneath flat should match front texture.

-  closets: 
   (a) fix way closet is put in chunk (remove side field)

++ overall consistency (doors/lights/overhangs/windows)


MILESTONE 4  (pipe dreams...)
===========

++ light up levels (a la quake).

+  secrets

-  "megacells" (a group of 2x2 cells as a single room).

-  prefabs : capability system, e.g. need_caps={ "slopes" }

+  teleporters!

?? one-way routes ??
   -  for example: at along:3 fall-off -> along:4
      BUT... how to get back to along:3 ??
      WITHOUT creating an alternative path?
      ANSWER: use another one-way connection

   - One way connections:
     (a) fall-offs
     (b) teleporters
     (c) doors that only open from one side (esp. via a switch)
     (d) lifts that go up (or down) into a hole
         (activated by a switch only on one side).

-  bridge switches

-  liquid pools and traps

-  stair/lift selection: control via ROOM/COMBO/THEME/GAME.

-  stair prefabs: use special '/' symbol for the stairs themselves.

?  pillar patterns: 1379, 2468, line thru center

-  overhangs: thick and central pillars

-  GUI: create Game menu based on the lua scripts present.
-  GUI: Advanced button.
-  GUI: make sure target dir is writable _before_ making levels.
   (have a "CheckDirWritable" function?)
-  GUI: don't crash if wad[.]func is called but wrong game.

 ____________________
|KEY:                |
|    #  completed    |
|    -  plain item   |
|    +  important    |
|    >> in progress  |
|    ?? not sure     |
|____________________|

