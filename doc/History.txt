
History of Oblige
-----------------

Oblige I was the very first version, begun around MAY 2005.
It was written in pure C++ and with very limited architecture.


Oblige II started development in JUNE 2006.
LUA scripts with a C++ GUI frontend.


Oblige III is the latest big rewrite that has been
worked on since the 0.94 public release (JULY 2007).


Public Releases:
   v0.81  :  2007-01-21
   v0.85  :  2007-02-19
   v0.94  :  2007-07-05
   v0.97  :  2008-05-30


Release 0.85 Changes:
-  Hallways
-  Crates
-  New exits rooms
-  better algorithm for choosing floor/ceiling heights.
-  user adjustments for health/ammo/monsters/traps.
-  current settings are remembered when you quit.
-  support for FreeDOOM, TNT Evilution and Plutonia.
-  levels are watermarked with some Oblige logos.

Release 0.94 Changes:
-  new prefab system, lots of cool prefabs.
-  new theme system for more consistent levels.
-  different sized rooms.
-  greatly improved Hexen support.
-  experimental Wolfenstein-3D support.
-  secret areas and levels.
-  balconies.

Release 0.97 Changes:
-  improved Heretic themes (Sam Trenholme)
-  fixed the stair-building error (Sam)
-  add some Cyberdemons into DOOM maps
-  don't put monsters or things on crates
-  don't put blaze doors in Heretic maps (Sam)
-  various small enhancements (Enhas)



MILESTONE 0  (reached!)
===========

Able to create a map of connected areas, with a
few items / monsters, and which works in DOOM.


MILESTONE 1  (reached!)
===========

a) Planning:

   #  proper quest structure, E branches off a cell
      between S and K.

   #  quests: KEY, SWITCH, WEAPON

b) Builder:
 
   #  create a reasonable room in each cell,

   #  create doors between rooms, KEYED when required

   #  add exit switch to final room

   #  player model: (health, armour, ammo, weapons)

   #  add some monsters
 
   #  add some supplies (health, ammo)

c) Writer:

   #  support fragments

   #  texture X alignment (esp. fragments)


MILESTONE 2  (reached!) --> public releases 0.81
===========

#  working GUI interface using FLTK

#  build WAD files directly (no wadlc step).

#  use GLBSP plugin to build nodes automatically.

#  more architecture features:

   #  pillars
   #  lights / sky-holes in the ceiling
   #  paintings / computers / lights in the wall
   #  monster cages
   #  monster closets (esp. along a back-track route)
   #  monsters teleporting in


MILESTONE 3  (sorta reached) --> public release 0.94
===========

#  larger rooms, different shapes.

#  adjustment controls for DeathMatch levels.

#  better support for Wolf3d, Doom 1/2, Heretic, and Hexen.

#  allocation system for blocks (can_walk tests).

#  secrets.

#  wall switches: place in the wall! 

#  support these liquid wall animations:
   (a) water --> FIREMAGx (W74A_1, W74A_2, W74B_1)
   (b) lava  --> ROCKREDx (WALL64_2, W64B_1, W64B_2)
   (c) slime --> BLODRIPx (RP2_1, RP2_2, RP2_3, RP2_4)

